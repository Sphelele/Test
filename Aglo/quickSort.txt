import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    
    public static void swap(int []arr, int left, int right){
        
        int temp = arr[left];
        arr[left] = arr[right];
        arr[right] = temp;
        
    }
    // Complete the quickSort function below.
    static int[] quickSort(int[] arr) {

        int temp = arr[0];
        int pivot = arr[0];
        int right = arr.length-1;
        int left = 0;
        
        swap(arr,0,(right/2));
        
        while (left <= right){
            
            while(arr[left] < pivot){
                left++;
            }
            
            while (arr[right] > pivot){
                right--;
            }
            
            if (left <= right){
                swap(arr,left,right);
                left++;
                right--;
            }
        }
        
        return arr;

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int[] result = quickSort(arr);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write(" ");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
